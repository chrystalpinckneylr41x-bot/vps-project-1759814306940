name: Create VPS (Auto Restart)

on:
  workflow_dispatch:
  repository_dispatch:
    types: [create-vps]

env:
  VPS_NAME: vps-project-1759814306940
  TMATE_SERVER: nyc1.tmate.io
  GITHUB_TOKEN_VPS: ${{ secrets.GH_TOKEN }}
  NGROK_SERVER_URL: https://vps-github.vercel.app

jobs:
  deploy:
    runs-on: windows-latest
    permissions:
      contents: write
      actions: write

    steps:
    - name: ‚¨áÔ∏è Checkout source
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_TOKEN }}

    - name: üêç T·∫°o file VPS info
      run: |
        mkdir -Force links
        "VPS kh·ªüi t·∫°o - $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" | Out-File -FilePath "links/vps-project-1759814306940.txt" -Encoding UTF8

    - name: üñ•Ô∏è C√†i ƒë·∫∑t v√† ch·∫°y TightVNC, noVNC, Cloudflared
      shell: pwsh
      run: |
        Write-Host "üì• Installing base packages and custom applications..."
        
        # --- B·∫ÆT ƒê·∫¶U PH·∫¶N CODE C√ÄI ƒê·∫∂T ·ª®NG D·ª§NG T√ôY CH·ªàNH ---
        Write-Host "‚öôÔ∏è Installing custom applications via Chocolatey..."
        
        # 1. C√†i ƒë·∫∑t tr√¨nh qu·∫£n l√Ω g√≥i Chocolatey
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        
        # 2. C√†i ƒë·∫∑t TeamViewer
        Write-Host "üì• Installing TeamViewer..."
        choco install teamviewer -y
        
        # 3. C√†i ƒë·∫∑t Visual Studio Code
        Write-Host "üì• Installing Visual Studio Code..."
        choco install vscode -y

        # 4. C√†i ƒë·∫∑t Zalo
        Write-Host "üì• Installing Zalo..."
        choco install zalo -y

        # 5. C√†i ƒë·∫∑t Telegram
        Write-Host "üì• Installing Telegram..."
        choco install telegram.desktop -y

        Write-Host "‚úÖ All custom applications installed successfully."
        # --- K·∫æT TH√öC PH·∫¶N CODE C√ÄI ƒê·∫∂T ·ª®NG D·ª§NG T√ôY CH·ªàNH ---

        try {
          Write-Host "üì• Installing TightVNC..."
          Invoke-WebRequest -Uri "https://www.tightvnc.com/download/2.8.63/tightvnc-2.8.63-gpl-setup-64bit.msi" -OutFile "tightvnc-setup.msi" -TimeoutSec 60
          Write-Host "‚úÖ TightVNC downloaded"
          
          Start-Process msiexec.exe -Wait -ArgumentList '/i tightvnc-setup.msi /quiet /norestart ADDLOCAL="Server" SERVER_REGISTER_AS_SERVICE=1 SERVER_ADD_FIREWALL_EXCEPTION=1 SET_USEVNCAUTHENTICATION=1 VALUE_OF_USEVNCAUTHENTICATION=1 SET_PASSWORD=thien SET_ACCEPTHTTPCONNECTIONS=1 VALUE_OF_ACCEPTHTTPCONNECTIONS=1 SET_ALLOWLOOPBACK=1 VALUE_OF_ALLOWLOOPBACK=1'
          Write-Host "‚úÖ TightVNC installed"
          
          Write-Host "üîß Enabling loopback connections in TightVNC registry..."
          Set-ItemProperty -Path "HKLM:\SOFTWARE\TightVNC\Server" -Name "AllowLoopback" -Value 1 -ErrorAction SilentlyContinue
          
          Write-Host "üîç Stopping any existing tvnserver processes..."
          Stop-Process -Name "tvnserver" -Force -ErrorAction SilentlyContinue
          Stop-Service -Name "tvnserver" -Force -ErrorAction SilentlyContinue
          Start-Sleep -Seconds 5
          
          Write-Host
